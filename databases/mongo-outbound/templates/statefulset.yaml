apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}
spec:
  serviceName: {{ .Release.Name }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      initContainers:
        - name: create-user
          image: mongo:6.0
          command:
            - sh
            - -c
            - |
              mongod --fork --logpath /var/log/mongodb.log --dbpath /data/db --bind_ip_all
              mongosh --eval '
                db.getSiblingDB("admin").createUser({
                  user: "{{ .Values.auth.username }}",
                  pwd: "{{ .Values.auth.password }}",
                  roles: [ { role: "root", db: "admin" } ]
                })
              '
              mongod --shutdown
          volumeMounts:
            - name: mongo-storage
              mountPath: /data/db
      containers:
        - name: mongo
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.port }}
          command:
            - mongod
            - "--port={{ .Values.service.port }}"
            - "--bind_ip_all"
            - "--auth"
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: {{ .Values.auth.username | quote }}
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: {{ .Values.auth.password | quote }}
            - name: MONGO_INITDB_DATABASE
              value: {{ .Values.auth.database | quote }}
          volumeMounts:
            - name: mongo-storage
              mountPath: /data/db
      volumes:
        - name: mongo-storage
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | quote }}
