apiVersion: v1
kind: ConfigMap
metadata:
  name: fluent-bit-config
  namespace: amazon-cloudwatch
data:
  filter.lua: |
    function filter(tag, timestamp, record)
        print("=== DEBUG: RECORD DUMP ===")

        -- record가 테이블인지 확인
        if type(record) == "table" then
            -- 테이블 내 모든 키와 값 출력
            for k, v in pairs(record) do
                print(k .. ": " .. tostring(v))
            end
        else
            print("Record is not a table:" .. tostring(record))
        end

        -- 'message' 또는 'log' 필드를 가져옴
        local log_message = record["message"] or record["log"]

        if log_message then
            print("Log message:" .. log_message)
        else
            print("No log message found")
        end

        -- "error", "alert", "crit", "emerg"가 포함되면 필터링하여 전달
        if log_message and (string.find(log_message, "error") or string.find(log_message, "alert") or string.find(log_message, "crit") or string.find(log_message, "emerg")) then
            print("Filtered log:" .. log_message)
            return 0, record  -- 로그를 전달
        else
            print("Log ignored:" .. log_message)
            return 1, record  -- 로그를 무시
        end
    end
  filter_old.lua: |
    function filter(tag, timestamp, record)
        -- 로그 메시지에서 타임스탬프 추출
        local timestamp_str = record["log"]
        if timestamp_str then
            local date_str = timestamp_str:match("(%d%d%d%d-%d%d-%d%d)")
            if date_str then
                -- 타임스탬프를 날짜 객체로 변환
                local year, month, day = date_str:match("(%d%d%d%d)-(%d%d)-(%d%d)")
                local log_date = os.time({year = year, month = month, day = day})

                -- 2025년 3월 6일 날짜 객체 생성
                local cutoff_date = os.time({year = 2025, month = 3, day = 6})

                -- 로그 날짜가 2025년 3월 6일 이전인지 확인
                if log_date < cutoff_date then
                    return 2, timestamp, record -- 로그 유지
                else
                    return 0, timestamp, record -- 로그 삭제
                end
            end
        end
        return 2, timestamp, record -- 타임스탬프가 없으면 로그 유지
    end
  fluent-bit.conf: |
    [SERVICE]
        Flush         1
        Log_Level     debug
        Daemon        Off

    [INPUT]
        Name          tail
        Path          /var/log/containers/test-log-1.log
        Tag           text
        read_from_head false

    [INPUT]
        Name          tail
        Path          /var/log/containers/test-log-1.log
        Tag           file
        read_from_head false

    [FILTER]
        Name          lua
        Match         text
        script        /etc/fluent-bit/filter.lua
        call          filter

    [FILTER]
        Name          lua
        Match         file
        script        /etc/fluent-bit/filter_old.lua
        call          filter

    [OUTPUT]
        Name          cloudwatch_logs
        Match         text
        region        us-east-1
        log_group_name young
        log_stream_prefix fix
        auto_create_group true

    [OUTPUT]
        Name          cloudwatch_logs
        Match         file
        region        us-east-1
        log_group_name young
        log_stream_prefix old
        auto_create_group true

    [OUTPUT]
        Name          stdout
        Match         *

