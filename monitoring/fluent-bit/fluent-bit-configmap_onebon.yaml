apiVersion: v1
kind: ConfigMap
metadata:
  name: fluent-bit-config
  namespace: amazon-cloudwatch
data:
  filter.lua: |
    function filter(tag, timestamp, record)
      print("=== DEBUG: RECORD DUMP ===")

      -- 전체 record 출력
      for k, v in pairs(record) do
        print(k .. ":" .. tostring(v))
      end

      -- log_message를 다양한 방식으로 시도
      local log_message = record["message"] or record["log"] or tostring(record)

      if log_message then
        print("Log message:" .. log_message)
      else
        print("No log message found")
      end

      local log_lower = string.lower(log_message)

      if string.find(log_lower, "error") or string.find(log_lower, "alert")
          or string.find(log_lower, "crit") or string.find(log_lower, "emerg") then
        print("Filtered log:" .. log_message)
        return 0, record
      else
        print("Log ignored:" .. log_message)
        return -1, record
      end
    end
  fluent-bit.conf: |
    [SERVICE]
        Flush           1
        Log_Level       debug
        Daemon          Off

    [INPUT]
        Name             tail
        Path             /helm-charts/monitoring/log/inventory-service.log
        Tag              text
        Read_from_Head   false
        Refresh_Interval 5
        Rotate_Wait      60
    [FILTER]
        Name             lua
        Match            text
        script           /etc/fluent-bit/filter.lua
        call             filter

    [OUTPUT]
        Name             cloudwatch_logs
        Match            text
        region           us-east-1
        log_group_name   inventory
        log_stream_prefix fix
        auto_create_group true

    [OUTPUT]
        Name             stdout
        Match            *
